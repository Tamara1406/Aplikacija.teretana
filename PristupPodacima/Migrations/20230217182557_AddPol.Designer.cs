// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PristupPodacima;

#nullable disable

namespace PristupPodacima.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230217182557_AddPol")]
    partial class AddPol
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domen.Grupa", b =>
                {
                    b.Property<int>("GrupaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GrupaID"), 1L, 1);

                    b.Property<string>("GrupaIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MestoID")
                        .HasColumnType("int");

                    b.Property<int>("TrenerID")
                        .HasColumnType("int");

                    b.HasKey("GrupaID");

                    b.HasIndex("MestoID");

                    b.HasIndex("TrenerID");

                    b.ToTable("Grupe");
                });

            modelBuilder.Entity("Domen.Klijent", b =>
                {
                    b.Property<int>("KlijentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KlijentID"), 1L, 1);

                    b.Property<int?>("GrupaID")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kilaza")
                        .HasColumnType("int");

                    b.Property<int>("PolID")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Visina")
                        .HasColumnType("int");

                    b.HasKey("KlijentID");

                    b.HasIndex("GrupaID");

                    b.HasIndex("PolID");

                    b.ToTable("Klijent", (string)null);
                });

            modelBuilder.Entity("Domen.Mesto", b =>
                {
                    b.Property<int>("MestoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MestoID"), 1L, 1);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MestoID");

                    b.ToTable("Mesto", (string)null);
                });

            modelBuilder.Entity("Domen.Obrazovanje", b =>
                {
                    b.Property<int>("ObrazovanjeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObrazovanjeID"), 1L, 1);

                    b.Property<string>("StepenObrazovanja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ObrazovanjeID");

                    b.ToTable("Obrazovanje", (string)null);
                });

            modelBuilder.Entity("Domen.Pol", b =>
                {
                    b.Property<int>("PolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PolID"), 1L, 1);

                    b.Property<string>("PolNaziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PolID");

                    b.ToTable("Pol", (string)null);
                });

            modelBuilder.Entity("Domen.Trener", b =>
                {
                    b.Property<int>("TrenerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrenerID"), 1L, 1);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ObrazovanjeID")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrenerID");

                    b.HasIndex("ObrazovanjeID");

                    b.ToTable("Treneri");
                });

            modelBuilder.Entity("Domen.Grupa", b =>
                {
                    b.HasOne("Domen.Mesto", "Mesto")
                        .WithMany()
                        .HasForeignKey("MestoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domen.Trener", "Trener")
                        .WithMany()
                        .HasForeignKey("TrenerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mesto");

                    b.Navigation("Trener");
                });

            modelBuilder.Entity("Domen.Klijent", b =>
                {
                    b.HasOne("Domen.Grupa", "Grupa")
                        .WithMany()
                        .HasForeignKey("GrupaID");

                    b.HasOne("Domen.Pol", "Pol")
                        .WithMany()
                        .HasForeignKey("PolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupa");

                    b.Navigation("Pol");
                });

            modelBuilder.Entity("Domen.Trener", b =>
                {
                    b.HasOne("Domen.Obrazovanje", "Obrazovanje")
                        .WithMany()
                        .HasForeignKey("ObrazovanjeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Obrazovanje");
                });
#pragma warning restore 612, 618
        }
    }
}
